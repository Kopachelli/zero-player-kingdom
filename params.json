{"name":"Zero-player-kingdom","tagline":"a Zero Player RPG","body":"# Zero Player Kingdom\r\n\r\nZero Player Kingdom started off as a legit stab at a 0-Player RPG but it’s now a playground for me to try out new languages and code concepts. Since there is a very clear roadmap for adding specific functionality, it’s a great platform for learning the unique aspects of a new language or coding style.\r\n\r\nIn this project you will find a directory for each language which ZPK has been developed in, with another README explaining how to compile and run it. \r\n\r\nOfficial releases can be found in the [releases page](https://github.com/azanebrain/zero-player-kingdom/releases), or you can play (or not play?) [ZPK online](http://azanebrain.github.io/zero-player-kingdom).\r\n\r\n# Roadmap\r\n\r\n0.1.0: Let’s brawl! (basic combat)\r\n\r\n- The world will be initialized with 2 units that punch each other to death. \r\n- Initialization : this function (`zpk_init()`) will initialize the world, units, and start the battle phase\r\nAttribute: Str (int): Strength of the unit\r\n- New Attribute: Def (int): Defense of the unit\r\n- New Attribute: Hp (int): Hit Points of the unit. When the unit's HP reaches 0, they are dead \r\n- New Attribute: Name (string): Name of the unit\r\n- New Attack: Punch: Attacker deals their strength amount of damage to the defender\r\n- New Class: Person: Basic person unit with these attributes: Str (random number 2-6), def (random number 1-4), hp (random number 15-25), and set attribute: name. All attributes are required. A Person can use the Punch attack.\r\n- New Unit: The Knight: Basic Person. Name: The Knight\r\n- New Unit: The Enemy Knight: Basic Person. Name: The Enemy Knight\r\n- New Phase: Battle: Two units engage in battle with each other, trading turns attacking until one has 0 hp. \r\n- Initiate battle between The Knight vs The Enemy Knight. Each unit trades punches until one dies. The Knight goes first\r\n\r\n0.2.0: I go first! \r\n\r\n- Introduces a turn system during the battle phase by comparing units' dexterity attribute.\r\n- New Attribute: Dex (int): Dexterity of the unit. \r\n- People Class units are constructed with a random dexterity from 5-10 \r\n- New feature: People list : A list of all the people in the world organized by dexterity (highest first). When two units have the same dexterity, order them randomly\r\n- Update Initialization: Generate the people list. This may require that people are added to the list during construction, then sorted.\r\n- New Feature: Turn system in battle phase. Instead of The Knight going first, attack order follows the global people list\r\n\r\n0.3.0: Knight fight! <-- Typescript\r\n\r\n- Adds the Knight Unit Class\r\n- New Class: Knight : Extends Person\r\n- Units: The Knight and the Enemy Knight are now Knight units, instead of person units.\r\n\r\n0.4.0: I know kung fu! <-- Coffeescript\r\n\r\n- Adds multiple attack options for units. Now the two knights will punch and kick each other to death\r\n- Update Person class: People have an attack array\r\n- New Attack: Kick : Deals the attackers strength + 2 damage\r\n- Update Knight class: Knights have the attack Kick in their attack array.\r\n- Now the knight units have two attack options: Punch and Kick\r\n- Update battle phase: The attacking unit randomly selects an attack to perform from their attack array\r\n\r\n0.5.0: With this blade! \r\n\r\n- Adds a sword item to the game.\r\n- New class: Item. Items are objects used and kept by people. \r\n- New item: Basic Sword\r\n- Update Person class: People have an inventory array\r\n\r\n0.6.0: Slice!\r\n\r\n- Items maintain an array of attacks\r\n- Update Item class: Items have an attack array\r\n- New Attack: Slice : Deals the attackers strength + 4 damage\r\n- Add attack 'Slice' to Basic Sword\r\n\r\n0.7.0 : Holster that blade!\r\n\r\n- Units can equip items and gain more attacks from the item.\r\n- Update Person: The Person class gets a method to equip an item. \r\n- Update Item: Items have an equip method that applies some functionality to the unit that has equipped it\r\n- Items with attack arrays add their array with the equipping units'. Do not include duplicates\r\n- Update Initialization: The Knight unit equips a sword before the battle\r\n\r\n0.8.0: Drink this potion!\r\n\r\n- Adds a healing potion to the game\r\n- New Item: Basic Healing Potion : Extends Item. Gives 10hp to the user\r\n- New feature: World item list. when an item is create it is added to the world item list\r\n- Update Item: Add a destruction method which erases the item and removes it from the world item list\r\n- Update item: Add a Use method which applies functionality when the item is used\r\n- Update initialization: The Knight uses the healing potion before the battle\r\n\r\n0.9.0: I only have two hands!\r\n\r\n- Update Person: Add equipment slots: Left hand and Right hand\r\n- Update Item: Items can only be equipped to a list of specific equipment slots. By default, this is an empty list\r\n- Update Basic Sword: This item can only be equipped to the Left or Right hands.\r\n- Update Item: Item's equip method must check that the equipping user has a empty valid equipment slot.\r\n\r\n0.10.0: Armor protect me!\r\n\r\n- Adds armor to the game\r\n- Update Person: Person units have a Body equipment slot\r\n- New Item: Basic Armor: Extends Item. Adds +5 defense to the equipping unit. Can only be equipped to the Body equipment slot\r\n- Update initialization: The Knight equips Basic Armor before the battle\r\n\r\n0.x.0: Hold this for a minute!\r\n\r\n- Adds the ability for units to hold items without equipping them.\r\n- Update Person: Add an inventory array\r\n- Decide how to handle equipped items. Keep them in the inventory list (or object) with an isEquipped property? Make another list?\r\n- Update Initialization: The Knight is given a Basic Healing Potion to hold\r\n\r\n0.x.0: Throw it!\r\n\r\n- New attack option: Use an item (units randomly select to use an item if they have one)\r\n\r\n# Contributing\r\n\r\nContributions are welcome! If you're learning a new language, I suggest forking this project and trying out the roadmap yourself. On the other hand, if I did something wrong, or a project could work better, feel free to [create an issue](https://github.com/azanebrain/zero-player-kingdom/issues/new) or [submit a pull request](https://github.com/azanebrain/zero-player-kingdom/pulls). \r\n\r\n## Commits\r\n\r\nSince there are so many subprojects make sure you define what project the commit focused on, following this format: \r\n\r\n```\r\nPROJECT : Short description\r\n[Extra line break]\r\nLong description describing details of the commit, referencing issues and other relevant info\r\n```\r\n\r\nFor example:\r\n\r\n```\r\nCOFFEESCRIPT: Complete Battle Phase\r\n\r\nAdd Battle Phase which allows two units to fight each other\r\nSee #42\r\n```\r\n\r\n# License\r\n\r\nZero Player Kingdom\r\nCopyright (C) 2015 AJ Zane\r\n\r\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.","google":"UA-55599516-2","note":"Don't delete this file! It's used internally to help with page regeneration."}